name: tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  check_code_quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Load cached virtual environment
        uses: actions/cache@v3
        id: cache-venv
        with:
          path: ~/.venv/
          key: ${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-venv-quality-${{ hashFiles('requirements.txt') }}--${{ hashFiles('setup.py') }}
      - name: Install dependencies
        shell: bash
        run: |
          python -m venv ~/.venv
          source ~/.venv/bin/activate
          python -m pip install --upgrade pip
          pip install .[dev]
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - name: Check quality
        run: |
          make quality

  tests:
    needs: check_code_quality
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Load cached virtual environment Python ${{ matrix.python-version }}
      uses: actions/cache@v3
      id: cache-venv
      with:
        path: ~/.venv/
        key: ${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-venv-test-${{ hashFiles('requirements.txt') }}--${{ hashFiles('setup.py') }}
    - name: Install dependencies
      shell: bash
      run: |
        python -m venv ~/.venv
        source ~/.venv/bin/activate
        python -m pip install --upgrade pip
        # cpu version of pytorch
        pip install .[test]
      if: steps.cache-venv.outputs.cache-hit != 'true'
    - name: Test with pytest
      run: |
        make test
